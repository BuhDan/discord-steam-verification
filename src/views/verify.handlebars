<img src="https://i.imgur.com/0Cd9MWW.png" class="mx-auto h-24 w-24" alt="DSV Logo" />

<h1 class="text-center text-2xl font-bold mt-8">{{ strings.sections.verification.VERIFYING_USER_TITLE }}</h1>
<ul>
  <li>
    <div>{{ strings.sections.verification.VERIFICATION_SERVER }}:</div>
    <div>{{ verification.server.name }} (<code>{{ verification.server.id }}</code>)</div>
  </li>
  <li>
    <div>{{ strings.sections.verification.VERIFICATION_USER }}:</div>
    <div>{{ verification.user.name }} (<code>{{ verification.user.id }}</code>)</div>
  </li>
  <li>
    <div>{{ strings.sections.verification.VERIFICATION_STARTED_AT }}:</div>
    <div>
      <script>document.write(`${new Date({{ verification.startedAt }}).toLocaleDateString()} ${new Date({{ verification.startedAt }}).toLocaleTimeString()}`)</script>
    </div>
  </li>
</ul>

<h1 class="text-center text-2xl font-bold mt-12">{{ strings.sections.steam.STEAM_DETAILS_TITLE }}</h1>
<ul>
  <li>
    <div>{{ strings.sections.steam.USERNAME }}:</div>
    <div>{{ user.username }}</div>
  </li>
  <li>
    <div>SteamID:</div>
    <div>{{ user.steamid }}</div>
  </li>
  <li>
    <div>Profile URL:</div>
    <div><a href="{{ user.profile }}" target="_blank">Click here</a></div>
  </li>
</ul>

<div class="flex flex-col mt-10 items-center justify-center gap-x-4 gap-y-2 sm:flex-row">
  <button id="yes" class="bg-green-600 transition-colors hover:bg-green-700 w-full px-6 py-1.5 rounded-lg">{{
    strings.sections.buttons.YES }}</button>
  <button id="no" class="bg-red-600 transition-colors hover:bg-red-700 w-full rounded-lg px-6 py-1.5">{{
    strings.sections.buttons.NO }}</button>
</div>

<script>
  // Getting buttons from the document;
  const btnYes = document.querySelector("button#yes");
  const btnNo = document.querySelector("button#no");

  // Adding @click listeners so we could get a signal when user clicks one;
  btnYes.onclick = async () => {
    try {
      const { data } = await fetch(`/verify`, {
        method: "POST",
        body: JSON.stringify({
          userId: "{{ verification.user.id }}",
          serverId: "{{ verification.server.id }}",
          steamId: "{{ user.steamid }}"
        })
      })

      if (!data || data.error) {
        console.error(data);
        return alert(data.message)
      } else if (!data.error && data.verified) {
        alert("{{ strings.SUCCESS_MESSAGE }}");

        // We can't close the window but we can make it disappear ¯\_(ツ)_/¯
        window.close();
        window.open("about:blank", "_self");
      }
    } catch (err) {
      console.error(err);
      if (!err.response || !err.response.data || !err.response.data.message) return;
      alert(err.response.data.message);
    }
  };

  btnNo.onclick = () => {
    const warning = confirm("{{ strings.CLOSE_PAGE_MESSAGE }}");
    if (warning) {
      window.close();
      window.open("about:blank", "_self");
    };
  };
</script>